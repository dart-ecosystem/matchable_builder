import 'dart:core'; // Generated by DemoPartGenerator
import 'dart:core' as generated; // Generated by DemoPartGenerator
import 'dart:convert' as generated; // Generated by DemoPartGenerator
import 'dart:collection' as generated; // Generated by DemoPartGenerator

import 'dart:async';

import 'package:build/src/builder/build_step.dart';
import 'package:build/src/builder/builder.dart';
import 'package:demo/src/demo_cache.dart';
import 'package:matchable_builder/matchable_builder.dart';

class DemoCombiner extends MatchableCombiningBuilder {
  DemoCombiner(BuilderOptions builderOptions) : super(builderOptions);

  @override
  Matcher<BuildStep> get fileMatcher => Matcher.nor([
        FilenameMatcher('builder.dart'),
        FilenameMatcher('demo_collector.dart'),
        FilenameMatcher('demo_cache.g.dart'),
        FilenameMatcher('demo_combiner.dart'),
        FilenameMatcher('demo_part_generator.dart'),
        FilenameExtensionMatcher('g.dart'),
      ]);

  @override
  Map<String, List<String>> get buildExtensions => {
        ".demo.json": [".demo.dart"]
      };

  @override
  Map<String, CacheResolver> get resolveCaches => {
        "**/*.demo.json": DemoCache.fromJson,
      };

  @override
  FutureOr<void> generate(
      LibraryElement library, Map<String, List<Object>> resolvedCaches, BuildStep buildStep) {
    List<Object> demoCaches = resolvedCaches["**/*.demo.json"];
    print(demoCaches);
  }
}
